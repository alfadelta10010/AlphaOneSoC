$date
	Wed Nov  6 18:50:53 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb_decoder $end
$var wire 5 ! rs2_tb [4:0] $end
$var wire 5 " rs1_tb [4:0] $end
$var wire 5 # rd_tb [4:0] $end
$var wire 7 $ opcode_tb [6:0] $end
$var wire 7 % fn7_tb [6:0] $end
$var wire 3 & fn3_tb [2:0] $end
$var reg 32 ' instIn_tb [31:0] $end
$scope module dut $end
$var wire 32 ( instIn [31:0] $end
$var reg 3 ) fn3 [2:0] $end
$var reg 7 * fn7 [6:0] $end
$var reg 7 + opcode [6:0] $end
$var reg 5 , rd [4:0] $end
$var reg 5 - rs1 [4:0] $end
$var reg 5 . rs2 [4:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
bx .
bx -
bx ,
bx +
bx *
bx )
bx (
bx '
bx &
bx %
bx $
bx #
bx "
bx !
$end
#1
b10010 #
b10010 ,
b1001 "
b1001 -
b1000 !
b1000 .
b0 &
b0 )
b0 %
b0 *
b110011 $
b110011 +
b100001001000100100110011 '
b100001001000100100110011 (
#2
b1001 #
b1001 ,
b0 "
b0 -
b0 !
b0 .
b10011 $
b10011 +
b10000000100000000010010010011 '
b10000000100000000010010010011 (
#3
b10 &
b10 )
b1000 !
b1000 .
b101 "
b101 -
b0 #
b0 ,
b100011 $
b100011 +
b100000101010001000100011 '
b100000101010001000100011 (
#4
b110 #
b110 ,
b101 "
b101 -
b0 !
b0 .
b10 &
b10 )
b11 $
b11 +
b101010001100000011 '
b101010001100000011 (
#5
b10100 !
b10100 .
b0 #
b0 ,
b11000 "
b11000 -
b110 &
b110 )
b1100011 $
b1100011 +
b1010011000110010001100011 '
b1010011000110010001100011 (
#6
b1 #
b1 ,
b1 "
b1 -
b0 !
b0 .
b0 &
b0 )
b1100111 $
b1100111 +
b1111111111100001000000011100111 '
b1111111111100001000000011100111 (
#7
b0 #
b0 ,
b0 "
b0 -
b1101111 $
b1101111 +
b1101111 '
b1101111 (
#8
b1 #
b1 ,
b110111 $
b110111 +
b10000111001000110111000010110111 '
b10000111001000110111000010110111 (
#9
b10010 #
b10010 ,
b10111 $
b10111 +
b10000000000000000100100010111 '
b10000000000000000100100010111 (
#10
b100000 %
b100000 *
b101 &
b101 )
b100 "
b100 -
b110 #
b110 ,
b10011 $
b10011 +
b1000001010000100101001100010011 '
b1000001010000100101001100010011 (
#11
